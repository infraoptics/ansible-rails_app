---

- name: make sure the app dir exists and is owner by app user
  file:
    path: "{{ rails_app_install_path }}/"
    state: directory
    owner: "{{ rails_app_user }}"

- name: checkout the rails app code from source control
  git:
    repo: "{{ rails_app_git_url }}"
    dest: "{{ rails_app_install_path }}"
    version: "{{ rails_app_git_branch }}"
    recursive: true
    accept_hostkey: true
  register: git
  become: true
  become_user: "{{ rails_app_user }}"
  notify:
    - restart passenger app
    - deploy tasks
  tags:
    - rails_app

- name: Optionally manage bundler version if required
  gem:
    name: bundler
    version: "{{ bundler_version }}"
    state: present
  when: bundler_version is defined
  tags:
    - rails_app

- name: bundle install the app gems dependencies
  bundler:
    state: present
    chdir: "{{ rails_app_install_path }}"
    deployment_mode: true
    exclude_groups: "{{ rails_app_deployment_exclude_groups }}"
    executable: "{{ rails_app_bundle_exe }}"
  become: true
  become_user: "{{ rails_app_user }}"
  environment:
    - RAILS_ENV: "{{ rails_app_env }}"
  notify:
    - restart passenger app
    - deploy tasks
  tags:
    - rails_app

- name: Add basic rails configuration files
  template:
    src: "{{ item }}.j2"
    dest: "{{ rails_app_install_path }}/config/{{ item }}"
  with_items: "{{ rails_app_default_config }}"
  become: true
  become_user: "{{ rails_app_user }}"
  notify:
    - restart passenger app
  tags:
    - rails_app

- name: Add additional rails configuration files
  template:
    src: "{{ item }}.j2"
    dest: "{{ rails_app_install_path }}/config/{{ item }}"
  with_items: "{{ rails_app_additional_config }}"
  become: true
  become_user: "{{ rails_app_user }}"
  notify:
    - restart passenger app
  tags:
    - rails_app

- name: Trigger deploy tasks if vendor/bundle does not exist
  stat:
    path: "{{ rails_app_install_path }}/vendor/bundle"
  register: vendor_bundle
  changed_when: "vendor_bundle.stat.isdir is undefined"
  notify:
    - deploy tasks
  tags:
    - rails_app

- name: Trigger deploy tasks if public/assets does not exist
  stat:
    path: "{{ rails_app_install_path }}/public/assets"
  register: public_assets
  changed_when: "public_assets.stat.isdir is undefined"
  notify:
    - deploy tasks
  tags:
    - rails_app
